(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{367:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"files-and-folders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#files-and-folders"}},[t._v("#")]),t._v(" Files and Folders")]),t._v(" "),s("p",[t._v("Most of the heavy lifting for handling files in your TYPO3 installation is done by the core itself using the FAL for example. To make working with files more\nconvenient, BetterApi gives you some additional tools to work with files inside the FAL and when working with local files on the hard drive.")]),t._v(" "),s("h2",{attrs:{id:"fal-file-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fal-file-service"}},[t._v("#")]),t._v(" FAL File Service")]),t._v(" "),s("p",[s("code",[t._v("LaborDigital\\Typo3BetterApi\\FileAndFolder\\FalFileService")])]),t._v(" "),s("p",[t._v("The FAL file service provides you a bunch of pre-build methods to work with the FAL programmatically. It handles tasks like creating folders, uploading files,\nretrieving files, creating new file references as well as providing you detailed file informations using the "),s("a",{attrs:{href:"#file-info"}},[t._v("FileInfo")]),t._v(" objects")]),t._v(" "),s("h3",{attrs:{id:"getfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfile"}},[t._v("#")]),t._v(" getFile()")]),t._v(" "),s("p",[t._v("This method has two modes of operation.")]),t._v(" "),s("ol",[s("li",[t._v('The first one is by only supplying a $uid. This uid should be a valid uid of a row in "sys_file"\nThe result will be either null or an object of type "File"')]),t._v(" "),s("li",[t._v("The second mode is by supplying a $uid, $table, and $field. This will now search the "),s("code",[t._v("sys_file_references")]),t._v(" table matching the given criteria. The result\nwill be either null, an array of FileReference objects or a single FileReference object depending on the $onlyFirst parameter.")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v('$uid can also be given as "query," which is the case when you are using a typolink field in the TCA.')])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$uid Either a sys_file | uid or a uid of the record using as reference\n"),s("ul",[s("li",[t._v("NULL To select all references of with the matching $table and $field")]),t._v(" "),s("li",[t._v("The $uid field alone can handle all possible inputs like the following as well.\n"),s("ul",[s("li",[t._v('"2:myfolder/myfile.jpg" (combined identifier)')]),t._v(" "),s("li",[t._v('"23" (file UID)')]),t._v(" "),s("li",[t._v('"uploads/myfile.png" (backwards-compatibility, storage "0")')]),t._v(" "),s("li",[t._v('"file:23"\n:::')])])])])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve a sys_file by uid")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve the first sys_file_reference for a record with uid 12 on tt_content")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fileReference")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'tt_content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'media'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve ALL references for a record with uid 12 on tt_content")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fileReferences")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'tt_content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'media'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You can also use fal identifiers")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'2:myfolder/myfile.jpg'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getfilereference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfilereference"}},[t._v("#")]),t._v(" getFileReference()")]),t._v(" "),s("p",[t._v("Similar to getFile() as it finds a file object in the FAL. However, this will solely search for file references and requires a numeric id for a reference to\nfind in the database.")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$uid The uid of the reference in the sys_file_reference table")])])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TypoContainer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalFileService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve a sys_file_reference by uid")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fileReference")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"addfilereference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#addfilereference"}},[t._v("#")]),t._v(" addFileReference()")]),t._v(" "),s("p",[t._v("This method creates a new file reference. It expects to receive a FAL file instance and some metadata to create the mapping on an external field.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("There will be no permission checks when creating the reference!")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$file The main file to create the reference for")]),t._v(" "),s("li",[t._v("$uid The uid of the record that should display the linked file")]),t._v(" "),s("li",[t._v("$field The field of the record that should be linked with this file")]),t._v(" "),s("li",[t._v("$table The table of the record that should be linked with this file")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Create a new reference for "media" on a page')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFileReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"media"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"pages"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"addfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#addfile"}},[t._v("#")]),t._v(" addFile()")]),t._v(" "),s("p",[t._v("Adds a file on your local file system to the FAL file system.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("The file given as $fileSystemPath will be moved to the FAL directory, not copied!")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$fileSystemPath The real path to the file to import. Should always be a FILE, not a FOLDER!")]),t._v(" "),s("li",[t._v('$falPath Defines where to put the file in the FAL file system. Nonexisting directories will auto-created, the default file storage is 1(fileadmin). If the\nfalPath ends with a slash "/", the filename will be taken from $fileSystemPath. If the falPath NOT ends with a slash, the filename is extracted from it')]),t._v(" "),s("li",[t._v("$onDuplication The behaviour on file conflicts. One of DuplicationBehavior's constants")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add a new file as /fal/dir/upload.jpg")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/var/www/html/upload.jpg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/fal/dir/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add a new file as /fal/dir/file.jpg")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/var/www/html/upload.jpg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/fal/dir/file.jpg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"adduploadedfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adduploadedfile"}},[t._v("#")]),t._v(" addUploadedFile()")]),t._v(" "),s("p",[t._v("Handles the upload of files and adds them to the FAL storage.")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$uploadFieldName The name of your field in the form. You can specify the form-name/namespace by prepending it like:\nnamespace.fieldName")]),t._v(" "),s("li",[t._v('$falPath Defines the path where to put the file in the FAL file system. Nonexisting directories will auto-created, the default file storage is 1(fileadmin).\nIf the falPath ends with a slash "/", the filename will be taken from $fileSystemPath. If the falPath NOT ends with a slash, the filename is extracted from it')]),t._v(" "),s("li",[t._v("$options An array of possible options\n"),s("ul",[s("li",[t._v('duplicationBehavior string ("replace"): Changes the way how duplicated files are handled. One of DuplicationBehavior\'s constants')]),t._v(" "),s("li",[t._v("allowedExtensions string|array: A comma separated list, or an array of allowed file extensions. If empty\n$GLOBALS['TYPO3_CONF_VARS']['BE']['fileExtensions']['allow']\nis used instead. Use \"*\" to allow all file types")]),t._v(" "),s("li",[t._v("deniedExtensions string|array: A comma separated list of denied file extensions. If empty $GLOBALS['TYPO3_CONF_VARS']['BE']['fileExtensions']['deny']\nis tried instead. This will always override allowedExtensions! So you can do a wildcard for all allowed files and specify what files you don't want if you\nwould like")]),t._v(" "),s("li",[t._v("maxFileSize: An integer value of bytes which define the max fileSize of the uploaded file. 0 means no limit.\n:::")])])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Resource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("DuplicationBehavior")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Upload a file that has the name $_POST["newDocument"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addUploadedFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"newDocument"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1:/your/directory/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'allowedExtensions'")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'doc,pdf,zip,rar,docx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'maxFileSize'")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8e+6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'duplicationBehavior'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("DuplicationBehavior")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RENAME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getfileinfo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfileinfo"}},[t._v("#")]),t._v(" getFileInfo()")]),t._v(" "),s("p",[t._v("Returns an object containing information for a given file, like it's size, URL, mime type, and similar options. Image and video files also contain additional\nmetadata like dimensions, description and platform video id's")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$file Can either be the instance of a file or anything that is valid as a $uid when using getFile()")])])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get file information for a file with uid 12")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFileReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FALSE")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get file info for a file reference on tt_content media")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ref")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"tt_content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"media"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFileReference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TRUE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isImage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TRUE (or FALSE, depending on your file :D)")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getfileurl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfileurl"}},[t._v("#")]),t._v(" getFileUrl()")]),t._v(" "),s("p",[t._v("Returns the url of a given file object")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$file Can either be the instance of a file or anything valid as a $uid when using getFile()")]),t._v(" "),s("li",[t._v("$withHash By default, all URLs have a cache buster hash attached. Set this to false if you don't want a cache buster")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"tt_content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"media"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://example.org/fileadmin/media.jpg?hash=xxxxxxxxxxxx")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getresizedimage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getresizedimage"}},[t._v("#")]),t._v(" getResizedImage()")]),t._v(" "),s("p",[t._v("This method is used to apply resizing and cropping definitions to an image file. The result will be a processed file.")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$file Can either be the instance of a file or anything that is valid as a $uid when using getFile()")]),t._v(" "),s("li",[t._v("$options The resizing options to apply when the image is generated\n"),s("ul",[s("li",[t._v("width int|string: see *1")]),t._v(" "),s("li",[t._v("height int|string: see *1")]),t._v(" "),s("li",[t._v("minWidth int The minimal width of the image in pixels")]),t._v(" "),s("li",[t._v("minHeight int The minimal height of the image in pixels")]),t._v(" "),s("li",[t._v("maxWidth int The maximal width of the image in pixels")]),t._v(" "),s("li",[t._v("maxHeight int The maximal height of the image in pixels")]),t._v(" "),s("li",[t._v("crop bool|string|array: True if the image should be cropped instead of stretched Can also be the name of a cropVariant that should be rendered Can be an\narray with (x,y,width,height) keys to provide a custom crop mask")]),t._v(" "),s("li",[t._v("params string: Additional command line parameters for imagick see: https://imagemagick.org/script/command-line-options.php")])])])]),t._v(" "),s("p",[t._v("*1: A numeric value, can also be a simple calculation. For further details take a look\nat "),s("a",{attrs:{href:"https://docs.typo3.org/m/typo3/reference-typoscript/8.7/en-us/Functions/Imgresource/Index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("imageResource.width"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Resize the given image to a width of 250px")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"tt_content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"media"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$resized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResizedImage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"width"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getresizedimageurl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getresizedimageurl"}},[t._v("#")]),t._v(" getResizedImageUrl()")]),t._v(" "),s("p",[t._v("Similar to getFileUrl() but is designed to resize and crop images on the fly. Note: If the image is not found, or the editing failed the original URL of the\nfile is returned!")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$file Can either be the instance of a file or anything valid as a $uid when using getFile()")]),t._v(" "),s("li",[t._v("$options The resizing options to apply when the image is generated\n"),s("ul",[s("li",[t._v("width int|string: see *1")]),t._v(" "),s("li",[t._v("height int|string: see *1")]),t._v(" "),s("li",[t._v("minWidth int|string: see *1")]),t._v(" "),s("li",[t._v("minHeight int|string: see *1")]),t._v(" "),s("li",[t._v("maxWidth int|string: see *1")]),t._v(" "),s("li",[t._v("maxHeight int|string: see *1")]),t._v(" "),s("li",[t._v("crop bool|string (FALSE): True if the image should be cropped instead of stretched Can also be the name of a cropVariant that should be rendered")])])])]),t._v(" "),s("p",[t._v('*1: A numeric value, can end a "c" to crop the image to the target width')])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Resize the given image to a width of 250px")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"tt_content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"media"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResizedImageUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"width"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://example.org/fileadmin/_processed_/xxxx.jpg?hash=xxxxxxxxxxxx")]),t._v("\n")])])])]),s("h3",{attrs:{id:"hasfolder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasfolder"}},[t._v("#")]),t._v(" hasFolder()")]),t._v(" "),s("p",[t._v("Checks if a certain fal folder exists or not.")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$falPath Something like /myFolder/mySubFolder, 1:/myFolder, 2")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check if a folder exists in mount 1 (fileadmin)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/myFolder/mySubFolder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check if a folder exists in mount 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"2:/myFolder/mySubFolder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getfolder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfolder"}},[t._v("#")]),t._v(" getFolder()")]),t._v(" "),s("p",[t._v("Retrieves a fal folder object from the storage and returns it. Throws an exception if the folder does not exist!")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$falPath Something like /myFolder/mySubFolder, 1:/myFolder, 2")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Gets a folder instance from mount 1 (fileadmin)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$folder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/myFolder/mySubFolder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"mkfolder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mkfolder"}},[t._v("#")]),t._v(" mkFolder()")]),t._v(" "),s("p",[t._v("Creates a new directory at the given path. This method handles the path recursively. Folders that already exist will simply be ignored.")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$falPath Something like /myFolder/mySubFolder, 1:/myFolder, 2")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("T3ba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("TYPO3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Utility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("GeneralUtility")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ContainerInterface")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$container")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FalService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Make a folder instance on mount 1 (fileadmin)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$folder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$falService")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkFolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/myFolder/mySubFolder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h2",{attrs:{id:"file-info"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file-info"}},[t._v("#")]),t._v(" File Info")]),t._v(" "),s("p",[s("code",[t._v("LaborDigital\\Typo3BetterApi\\FileAndFolder\\FileInfo\\FileInfo")])]),t._v(" "),s("p",[t._v("A unified file information repository for files, file references, and processed files. You can create a new instance of this class by\nusing "),s("a",{attrs:{href:"#getfileinfo"}},[t._v("FalFileService::getFileInfo()")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"isfilereference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isfilereference"}},[t._v("#")]),t._v(" isFileReference()")]),t._v(" "),s("p",[t._v('Returns true if the file is handled as a "sys-file-reference" object')]),t._v(" "),s("h3",{attrs:{id:"isprocessed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isprocessed"}},[t._v("#")]),t._v(" isProcessed()")]),t._v(" "),s("p",[t._v("Returns true if the handled file is a processed file instance")]),t._v(" "),s("h3",{attrs:{id:"getuid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getuid"}},[t._v("#")]),t._v(" getUid()")]),t._v(" "),s("p",[t._v("Returns the unique id of either the file reference or the file")]),t._v(" "),s("h3",{attrs:{id:"getfilereferenceuid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfilereferenceuid"}},[t._v("#")]),t._v(" getFileReferenceUid()")]),t._v(" "),s("p",[t._v("Returns either the uid of the handled file reference or null if the file is not a file reference")]),t._v(" "),s("h3",{attrs:{id:"getfileuid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfileuid"}},[t._v("#")]),t._v(" getFileUid()")]),t._v(" "),s("p",[t._v("Returns the uid if the low level file object")]),t._v(" "),s("h3",{attrs:{id:"gethash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gethash"}},[t._v("#")]),t._v(" getHash()")]),t._v(" "),s("p",[t._v("Returns a cache buster string for the file")]),t._v(" "),s("h3",{attrs:{id:"getfilename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfilename"}},[t._v("#")]),t._v(" getFileName()")]),t._v(" "),s("p",[t._v("Returns the base name of the current file name")]),t._v(" "),s("h3",{attrs:{id:"geturl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geturl"}},[t._v("#")]),t._v(" getUrl()")]),t._v(" "),s("p",[t._v("Returns the URL of the file handled as absolute URL")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$withHash Set this to false to disable the cache buster hash that will be added to the file URL")])])]),t._v(" "),s("h3",{attrs:{id:"getoriginalurl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getoriginalurl"}},[t._v("#")]),t._v(" getOriginalUrl()")]),t._v(" "),s("p",[t._v("Similar to getUrl() but always returns the default URL even if the current file is a processed file instance")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$withHash Set this to false to disable the cache buster hash that will be added to the file URL")])])]),t._v(" "),s("h3",{attrs:{id:"getmimetype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getmimetype"}},[t._v("#")]),t._v(" getMimeType()")]),t._v(" "),s("p",[t._v("Returns the mime type of the file")]),t._v(" "),s("h3",{attrs:{id:"getsize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getsize"}},[t._v("#")]),t._v(" getSize()")]),t._v(" "),s("p",[t._v("Returns the size of the handled file in bytes")]),t._v(" "),s("h3",{attrs:{id:"getextension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getextension"}},[t._v("#")]),t._v(" getExtension()")]),t._v(" "),s("p",[t._v("Returns the file extension of the handled file")]),t._v(" "),s("h3",{attrs:{id:"gettype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gettype"}},[t._v("#")]),t._v(" getType()")]),t._v(" "),s("p",[t._v("Returns the file type as they are defined in the File::FILETYPE_ constants")]),t._v(" "),s("h3",{attrs:{id:"isimage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isimage"}},[t._v("#")]),t._v(" isImage()")]),t._v(" "),s("p",[t._v("Returns true if the handled file is an image")]),t._v(" "),s("h3",{attrs:{id:"isvideo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isvideo"}},[t._v("#")]),t._v(" isVideo()")]),t._v(" "),s("p",[t._v("Returns the raw file instance this information object represents")]),t._v(" "),s("h3",{attrs:{id:"getfilereference-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfilereference-2"}},[t._v("#")]),t._v(" getFileReference()")]),t._v(" "),s("p",[t._v("Returns either the currently linked file reference or null if there is none")]),t._v(" "),s("h3",{attrs:{id:"getprocessedfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getprocessedfile"}},[t._v("#")]),t._v(" getProcessedFile()")]),t._v(" "),s("p",[t._v("Returns either the processed file object or null if the file was not processed")]),t._v(" "),s("h3",{attrs:{id:"getvideoinfo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getvideoinfo"}},[t._v("#")]),t._v(" getVideoInfo()")]),t._v(" "),s("p",[t._v("Returns either additional information if this file is a video or null if this file is not a video")]),t._v(" "),s("h3",{attrs:{id:"getimageinfo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getimageinfo"}},[t._v("#")]),t._v(" getImageInfo()")]),t._v(" "),s("p",[t._v("Returns either additional information if this file is an image or null if this file is not an image")]),t._v(" "),s("h2",{attrs:{id:"varfs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#varfs"}},[t._v("#")]),t._v(" VarFs")]),t._v(" "),s("p",[s("code",[t._v("LaborDigital\\Typo3BetterApi\\FileAndFolder\\VarFs\\VarFs")])]),t._v(" "),s("p",[t._v("In earlier versions I used the caching framework extensively to store dynamically generated content. However it is no longer allowed to create caches while the\next_localconf and tca files are generated. Therefore all data, which is dynamically generated by this extension is now stored in a separate temporary director")]),t._v(" "),s("p",[t._v("The VarFs class is part of the public API and can be used to store your own dynamically generated files.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("It's called >**TEMP**"),t._v(" /var/t3ba/ directory will be cleared!")])]),t._v(" "),s("p",[t._v("Create a new instance by passing a unique sub directory that will be created inside /var/t3ba:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"subDir/in/var/temp/fs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"hasfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasfile"}},[t._v("#")]),t._v(" hasFile()")]),t._v(" "),s("p",[t._v("Returns true if a file exists, false if not")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$filePath The name / relative path of the file to check")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"subDir/in/var/temp/fs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// True if file exists, false if not")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getfile-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfile-2"}},[t._v("#")]),t._v(" getFile()")]),t._v(" "),s("p",[t._v("Returns the file object for the required file path")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$filePath The name / relative path of the file to retrieve")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"subDir/in/var/temp/fs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SplFileInfo object if the file exists on the disk")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getfilecontent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getfilecontent"}},[t._v("#")]),t._v(" getFileContent()")]),t._v(" "),s("p",[t._v("Returns the content of a required file. It will automatically unpack serialized values back into their PHP values")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$filePath The name / relative path of the file to read")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"subDir/in/var/temp/fs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileContent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"setfilecontent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setfilecontent"}},[t._v("#")]),t._v(" setFileContent()")]),t._v(" "),s("p",[t._v("Is used to dump some content into a file. Automatically serializes non-string/numeric content before writing it as a file")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$filePath The name / relative path of the file to dump the content to")]),t._v(" "),s("li",[t._v("$content Either a string (will be dumped as string) or anything else (will be dumped as serialized value)")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"subDir/in/var/temp/fs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Writes a file with a given string content")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFileContent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"my content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Writes a file with the serialized string of your array")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFileContent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"myKey"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"my content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("h3",{attrs:{id:"includefile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includefile"}},[t._v("#")]),t._v(" includeFile()")]),t._v(" "),s("p",[t._v("Includes a file as a PHP resource")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$filePath The name of the file to include")]),t._v(" "),s("li",[t._v("$once by default we include the file with include_once, if you set this to FALSE the plain include is used instead.")])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VarFs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"subDir/in/var/temp/fs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Writes a dynamic php file to the file system and includes it")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFileContent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"myPhp.php"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"<?php echo \\"hello world\\";"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includeFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"myPhp.php"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prints: hello world")]),t._v("\n")])])])]),s("h3",{attrs:{id:"getbasedirectorypath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getbasedirectorypath"}},[t._v("#")]),t._v(" getBaseDirectoryPath()")]),t._v(" "),s("p",[t._v("Returns the configured base directory, either as absolute, or as relative path (relative to the t3ba root directory)")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$relative Set this to true if you want to retrieve the relative path based on the T3ba extension. Useful for compiling typoscript or flexform files")])])]),t._v(" "),s("h3",{attrs:{id:"flush"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flush"}},[t._v("#")]),t._v(" flush()")]),t._v(" "),s("p",[t._v("Completely removes the whole directory and all files in it")]),t._v(" "),s("h2",{attrs:{id:"permissions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#permissions"}},[t._v("#")]),t._v(" Permissions")]),t._v(" "),s("p",[s("code",[t._v("LaborDigital\\Typo3BetterApi\\FileAndFolder\\Permissions")])]),t._v(" "),s("h3",{attrs:{id:"setfilepermissions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setfilepermissions"}},[t._v("#")]),t._v(" setFilePermissions()")]),t._v(" "),s("p",[t._v("This helper works quite similar like GeneralUtility::fixPermissions() but without depending on the existence of the PATH_site constant. This method is built to\nhandle errors silently. The result of the method shows if there was an error (FALSE) or not (TRUE)")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Arguments")]),t._v(" "),s("ul",[s("li",[t._v("$filename The absolute path of the file to set the permissions for")]),t._v(" "),s("li",[t._v("$mode Optionally set a permission set like 0644 -> Make sure to use strings")]),t._v(" "),s("li",[t._v('$group Optionally set a group to set, otherwise the parent folder"s group will be used.')])])]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("LaborDigital"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Typo3BetterApi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileAndFolder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FilePermissionUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Sets the UNIX permissions of a file to 777.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("FilePermissionUtil")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFilePermissions")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"/absolute/file/path.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"0777"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);